{"ast":null,"code":"import _classCallCheck from \"/Users/austinwong/Desktop/GitHub/browser-file-system/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/austinwong/Desktop/GitHub/browser-file-system/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/austinwong/Desktop/GitHub/browser-file-system/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/austinwong/Desktop/GitHub/browser-file-system/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/austinwong/Desktop/GitHub/browser-file-system/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/austinwong/Desktop/GitHub/browser-file-system/src/Components/Folders.js\";\nimport React, { Component } from 'react';\nimport FolderItem from './FolderItem';\nimport PropTypes from 'prop-types';\n\nvar Folders =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Folders, _Component);\n\n  function Folders() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Folders);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Folders)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      folderItems: data\n    };\n\n    _this.getRootFolderItems = function () {\n      var folderItems = _this.state.folderItems;\n      return values(folderItems).filter(function (folderItem) {\n        return folderItem.isRoot === true;\n      });\n    };\n\n    _this.getChildFolderItems = function (folderItem) {\n      var folderItems = _this.state.folderItems;\n      if (!folderItem.children) return [];\n      return;\n    };\n\n    return _this;\n  }\n\n  _createClass(Folders, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props.folders);\n      return this.props.folders.map(function (folder) {\n        return React.createElement(FolderItem, {\n          key: folder.id,\n          folder: folder,\n          delFolder: _this2.props.delFolder,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        });\n      });\n    }\n  }]);\n\n  return Folders;\n}(Component); // PropTypes\n\n\nFolders.propTypes = {\n  folders: PropTypes.array.isRequired\n};\nexport default Folders;","map":{"version":3,"sources":["/Users/austinwong/Desktop/GitHub/browser-file-system/src/Components/Folders.js"],"names":["React","Component","FolderItem","PropTypes","Folders","state","folderItems","data","getRootFolderItems","values","filter","folderItem","isRoot","getChildFolderItems","children","console","log","props","folders","map","folder","id","delFolder","propTypes","array","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEMC,O;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,WAAW,EAAEC;AADP,K;;UAIRC,kB,GAAqB,YAAM;AAAA,UACjBF,WADiB,GACD,MAAKD,KADJ,CACjBC,WADiB;AAEzB,aAAOG,MAAM,CAACH,WAAD,CAAN,CAAoBI,MAApB,CAA2B,UAAAC,UAAU;AAAA,eAAIA,UAAU,CAACC,MAAX,KAAsB,IAA1B;AAAA,OAArC,CAAP;AACD,K;;UAEDC,mB,GAAsB,UAACF,UAAD,EAAgB;AAAA,UAC5BL,WAD4B,GACZ,MAAKD,KADO,CAC5BC,WAD4B;AAEpC,UAAI,CAACK,UAAU,CAACG,QAAhB,EAA0B,OAAO,EAAP;AAC1B;AACD,K;;;;;;;6BAGQ;AAAA;;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,OAAvB;AACA,aAAO,KAAKD,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuB,UAACC,MAAD;AAAA,eAC1B,oBAAC,UAAD;AAAY,UAAA,GAAG,EAAEA,MAAM,CAACC,EAAxB;AAA4B,UAAA,MAAM,EAAED,MAApC;AACA,UAAA,SAAS,EAAE,MAAI,CAACH,KAAL,CAAWK,SADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD0B;AAAA,OAAvB,CAAP;AAID;;;;EAvBmBrB,S,GA0BtB;;;AACAG,OAAO,CAACmB,SAAR,GAAoB;AAClBL,EAAAA,OAAO,EAAEf,SAAS,CAACqB,KAAV,CAAgBC;AADP,CAApB;AAIA,eAAerB,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport FolderItem from './FolderItem';\nimport PropTypes from 'prop-types';\n\nclass Folders extends Component {\n  state = {\n    folderItems: data,\n  };\n\n  getRootFolderItems = () => {\n    const { folderItems } = this.state;\n    return values(folderItems).filter(folderItem => folderItem.isRoot === true);\n  }\n\n  getChildFolderItems = (folderItem) => {\n    const { folderItems } = this.state;\n    if (!folderItem.children) return [];\n    return \n  }\n\n\n  render() {\n    console.log(this.props.folders)\n    return this.props.folders.map((folder) => (\n        <FolderItem key={folder.id} folder={folder} \n        delFolder={this.props.delFolder}/>\n    ));\n  }\n}\n\n// PropTypes\nFolders.propTypes = {\n  folders: PropTypes.array.isRequired\n}\n\nexport default Folders;\n"]},"metadata":{},"sourceType":"module"}
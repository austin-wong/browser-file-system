{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/austinwong/Desktop/GitHub/browser-file-system/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/austinwong/Desktop/GitHub/browser-file-system/src/Components/FolderItem.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: 12px;\\n  margin-right: \", \"px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  padding: 5px 8px;\\n  padding-left: \", \"px;\\n  &:hover {\\n    background: lightgray;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FaFile, FaFolder, FaFolderOpen, FaChevronDown, FaChevronRight } from 'react-icons/fa';\nimport styled from 'styled-components';\nimport last from 'lodash/last';\n\nvar getPaddingLeft = function getPaddingLeft(level, type) {\n  var paddingLeft = level * 20;\n  if (type === 'file') paddingLeft += 20;\n  return paddingLeft;\n};\n\nvar StyledTreeNode = styled.div(_templateObject(), function (props) {\n  return getPaddingLeft(props.level, props.type);\n});\nvar FolderIcon = styled.div(_templateObject2(), function (props) {\n  return props.marginRight ? props.marginRight : 5;\n});\n\nvar getFolderItemName = function getFolderItemName(folderItem) {\n  return last(folderItem.path.split('/'));\n};\n\nvar FolderItem = function FolderItem(props) {\n  var folderItem = props.folderItem,\n      getChildFolderItems = props.getChildFolderItems,\n      level = props.level,\n      onToggle = props.onToggle,\n      onFolderItemSelect = props.onFolderItemSelect,\n      delItem = props.delItem,\n      renameItem = props.renameItem;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(StyledTreeNode, {\n    level: level,\n    type: folderItem.type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: function onClick() {\n      return delItem(folderItem);\n    },\n    style: btnStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"x\"), React.createElement(FolderIcon, {\n    onClick: function onClick() {\n      return onToggle(folderItem);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, folderItem.type === 'folder' && (folderItem.isOpen ? React.createElement(FaChevronDown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }) : React.createElement(FaChevronRight, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }))), React.createElement(FolderIcon, {\n    marginRight: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, folderItem.type === 'file' && React.createElement(FaFile, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), folderItem.type === 'folder' && folderItem.isOpen === true && React.createElement(FaFolderOpen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), folderItem.type === 'folder' && !folderItem.isOpen && React.createElement(FaFolder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    role: \"button\",\n    onClick: function onClick() {\n      return onFolderItemSelect(folderItem);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, getFolderItemName(folderItem))), folderItem.isOpen && getChildFolderItems(folderItem).map(function (childFolderItem) {\n    return React.createElement(FolderItem, Object.assign({}, props, {\n      folderItem: childFolderItem,\n      level: level + 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n  }));\n};\n\nvar btnStyle = {\n  background: '#ff0000',\n  color: '#fff',\n  border: 'none',\n  padding: '3px 6px',\n  borderRadius: '50%',\n  cursor: 'pointer',\n  float: 'right' // export class FolderItem extends Component {\n  //   render() {\n  //     // Destructure\n  //     const { id, title } = this.props.folder\n  //     return (\n  //       / / Controls background color of each folder\n  //       <div style={itemStyle}>\n  //         <p>\n  //         { this.props.folder.title }\n  //         <button onClick={this.props.delFolder.bind(this, id)} style=\n  //         {btnStyle}>x</button>\n  //         </p>\n  //       </div>\n  //     )\n  //   }\n  // }\n  // PropTypes\n\n};\nFolderItem.propTypes = {\n  folder: PropTypes.object.isRequired,\n  getChildFolderItems: PropTypes.func.isRequired,\n  level: PropTypes.number.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  onFolderItemSelect: PropTypes.func.isRequired,\n  delItem: PropTypes.func.isRequired,\n  renameItem: PropTypes.func.isRequired\n};\nFolderItem.defaultProps = {\n  level: 0\n}; // const btnStyle = {\n//   background: '#ff0000',\n//   color: '#fff',\n//   border: 'none',\n//   padding: '5px 9px',\n//   borderRadius: '50%',\n//   cursor: 'pointer',\n//   float: 'right'\n// }\n// const itemStyle = {\n//   backgroundColor: '#f4f4f4'\n// }\n\nexport default FolderItem;","map":{"version":3,"sources":["/Users/austinwong/Desktop/GitHub/browser-file-system/src/Components/FolderItem.js"],"names":["React","Component","PropTypes","FaFile","FaFolder","FaFolderOpen","FaChevronDown","FaChevronRight","styled","last","getPaddingLeft","level","type","paddingLeft","StyledTreeNode","div","props","FolderIcon","marginRight","getFolderItemName","folderItem","path","split","FolderItem","getChildFolderItems","onToggle","onFolderItemSelect","delItem","renameItem","btnStyle","isOpen","map","childFolderItem","background","color","border","padding","borderRadius","cursor","float","propTypes","folder","object","isRequired","func","number","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { FaFile, FaFolder, FaFolderOpen, FaChevronDown, FaChevronRight } from 'react-icons/fa';\nimport styled from 'styled-components';\nimport last from 'lodash/last';\n\nconst getPaddingLeft = (level, type) => {\n  let paddingLeft = level * 20;\n  if (type === 'file') paddingLeft += 20;\n  return paddingLeft;\n}\n\nconst StyledTreeNode = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 5px 8px;\n  padding-left: ${props => getPaddingLeft(props.level, props.type)}px;\n  &:hover {\n    background: lightgray;\n  }\n`;\n\nconst FolderIcon = styled.div`\n  font-size: 12px;\n  margin-right: ${props => props.marginRight ? props.marginRight : 5}px;\n`;\n\nconst getFolderItemName = (folderItem) => last(folderItem.path.split('/'));\n\nconst FolderItem = (props) => {\n  const { folderItem, getChildFolderItems, level, onToggle, onFolderItemSelect, delItem, renameItem } = props;\n\n  return (\n    <React.Fragment>\n      <StyledTreeNode level={level} type={folderItem.type}>\n      <button onClick={() => delItem(folderItem)} style={btnStyle}>x</button> \n      {/* <button onClick={() => renameItem(folderItem)}> Rename </button> */}\n\n        <FolderIcon onClick={() => onToggle(folderItem)}>\n          { folderItem.type === 'folder' && (folderItem.isOpen  ? <FaChevronDown /> : <FaChevronRight />) } \n        </FolderIcon>\n        \n        <FolderIcon marginRight={10}>\n          { folderItem.type === 'file' && <FaFile /> }\n          { folderItem.type === 'folder' && folderItem.isOpen === true && <FaFolderOpen /> }\n          { folderItem.type === 'folder' && !folderItem.isOpen && <FaFolder /> }\n        </FolderIcon>\n\n        <span role=\"button\" onClick={() => onFolderItemSelect(folderItem)}>\n          { getFolderItemName(folderItem) }\n        </span>\n      </StyledTreeNode>\n      \n    { folderItem.isOpen && getChildFolderItems(folderItem).map(childFolderItem => (\n      <FolderItem\n        {...props}\n        folderItem={childFolderItem}\n        level={level + 1}\n      />\n    ))}\n  </React.Fragment>\n  \n  );\n}\n\nconst btnStyle = {\n  background: '#ff0000',\n  color: '#fff',\n  border: 'none',\n  padding: '3px 6px',\n  borderRadius: '50%',\n  cursor: 'pointer',\n  float: 'right'\n}\n\n\n// export class FolderItem extends Component {\n//   render() {\n//     // Destructure\n//     const { id, title } = this.props.folder\n//     return (\n//       / / Controls background color of each folder\n//       <div style={itemStyle}>\n//         <p>\n//         { this.props.folder.title }\n//         <button onClick={this.props.delFolder.bind(this, id)} style=\n//         {btnStyle}>x</button>\n//         </p>\n//       </div>\n//     )\n//   }\n// }\n\n\n// PropTypes\nFolderItem.propTypes = {\n  folder: PropTypes.object.isRequired,\n  getChildFolderItems: PropTypes.func.isRequired,\n  level: PropTypes.number.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  onFolderItemSelect: PropTypes.func.isRequired,\n  delItem: PropTypes.func.isRequired,\n  renameItem: PropTypes.func.isRequired\n};\n\nFolderItem.defaultProps = {\n  level: 0,\n};\n\n// const btnStyle = {\n//   background: '#ff0000',\n//   color: '#fff',\n//   border: 'none',\n//   padding: '5px 9px',\n//   borderRadius: '50%',\n//   cursor: 'pointer',\n//   float: 'right'\n// }\n\n// const itemStyle = {\n//   backgroundColor: '#f4f4f4'\n// }\n\nexport default FolderItem\n"]},"metadata":{},"sourceType":"module"}
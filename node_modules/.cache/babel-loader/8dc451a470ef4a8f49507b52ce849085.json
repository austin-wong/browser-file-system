{"ast":null,"code":"var _jsxFileName = \"/Users/austinwong/Desktop/GitHub/browser-file-system/src/Components/FolderItem.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FaFile, FaFolder, FaFolderOpen, FaChevronDown, FaChevronRight } from 'react-icons/fa';\nimport styled from 'style-components';\nimport last from 'lodash/last';\n\nvar getFolderName = function getFolderName(folderItem) {\n  return last(folderItem.path.split('/'));\n};\n\nvar FolderItem = function FolderItem(props) {\n  var folderItem = props.folderItem,\n      getChildFolderItems = props.getChildFolderItems,\n      level = props.level;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    level: level,\n    type: folderItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, node.type === 'folder' && (node.isOpen ? React.createElement(FaChevronDown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }) : React.createElement(FaChevronRight, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    marginRight: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, node.type === 'file' && React.createElement(FaFile, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), node.type === 'folder' && node.isOpen === true && React.createElement(FaFolderOpen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), node.type === 'folder' && !node.isOpen && React.createElement(FaFolder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    role: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, getNodeLabel(node))), folderItem.isOpen && getChildFolderItems(folderItem).map(function (childFolderItem) {\n    return React.createElement(FolderItem, Object.assign({}, props, {\n      folderItem: childFolderItem,\n      level: level + 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n  }));\n}; // export class FolderItem extends Component {\n//   render() {\n//     // Destructure\n//     const { id, title } = this.props.folder\n//     return (\n//       // Controls background color of each folder\n//       <div style={itemStyle}>\n//         <p>\n//         { this.props.folder.title }\n//         <button onClick={this.props.delFolder.bind(this, id)} style=\n//         {btnStyle}>x</button>\n//         </p>\n//       </div>\n//     )\n//   }\n// }\n// PropTypes\n\n\nFolderItem.propTypes = {\n  folder: PropTypes.object.isRequired\n};\nvar btnStyle = {\n  background: '#ff0000',\n  color: '#fff',\n  border: 'none',\n  padding: '5px 9px',\n  borderRadius: '50%',\n  cursor: 'pointer',\n  float: 'right'\n};\nvar itemStyle = {\n  backgroundColor: '#f4f4f4'\n};\nexport default FolderItem;","map":{"version":3,"sources":["/Users/austinwong/Desktop/GitHub/browser-file-system/src/Components/FolderItem.js"],"names":["React","Component","PropTypes","FaFile","FaFolder","FaFolderOpen","FaChevronDown","FaChevronRight","styled","last","getFolderName","folderItem","path","split","FolderItem","props","getChildFolderItems","level","node","type","isOpen","getNodeLabel","map","childFolderItem","propTypes","folder","object","isRequired","btnStyle","background","color","border","padding","borderRadius","cursor","float","itemStyle","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { FaFile, FaFolder, FaFolderOpen, FaChevronDown, FaChevronRight } from 'react-icons/fa';\nimport styled from 'style-components';\nimport last from 'lodash/last';\n\nconst getFolderName = (folderItem) => last(folderItem.path.split('/'));\n\nconst FolderItem = (props) => {\n  const { folderItem, getChildFolderItems, level } = props;\n\n  return (\n    <React.Fragment>\n      <div level={level} type={folderItem}>\n        <div>\n          { node.type === 'folder' && (node.isOpen ? <FaChevronDown /> : <FaChevronRight />) }\n        </div>\n\n        <div marginRight={10}>\n          { node.type === 'file' && <FaFile /> }\n          { node.type === 'folder' && node.isOpen === true && <FaFolderOpen /> }\n          { node.type === 'folder' && !node.isOpen && <FaFolder /> }\n        </div>\n\n        <span role=\"button\">\n          { getNodeLabel(node) }\n        </span>\n      </div>\n\n    { folderItem.isOpen && getChildFolderItems(folderItem).map(childFolderItem => (\n      <FolderItem\n        {...props}\n        folderItem={childFolderItem}\n        level={level + 1}\n      />\n    ))}\n  </React.Fragment>\n  );\n}\n\n\n\n// export class FolderItem extends Component {\n//   render() {\n//     // Destructure\n//     const { id, title } = this.props.folder\n//     return (\n//       // Controls background color of each folder\n//       <div style={itemStyle}>\n//         <p>\n//         { this.props.folder.title }\n//         <button onClick={this.props.delFolder.bind(this, id)} style=\n//         {btnStyle}>x</button>\n//         </p>\n//       </div>\n//     )\n//   }\n// }\n\n\n// PropTypes\nFolderItem.propTypes = {\n  folder: PropTypes.object.isRequired\n}\n\nconst btnStyle = {\n  background: '#ff0000',\n  color: '#fff',\n  border: 'none',\n  padding: '5px 9px',\n  borderRadius: '50%',\n  cursor: 'pointer',\n  float: 'right'\n}\n\nconst itemStyle = {\n  backgroundColor: '#f4f4f4'\n}\n\nexport default FolderItem\n"]},"metadata":{},"sourceType":"module"}